<?xml version="1.0" encoding="windows-1251" ?>
<?xml:stylesheet type="text/xsl" href="common/layout.xsl" ?>

<lesson title="JavaScript" next="index.xml" prev="section17HC.xml" summ="1">

<h2>19С. ДЗ по курсу XML</h2>
<h3>Модуль 1. Введення в XML. Структура XML документа. XML та CSS</h3>
<h5>Завдання 1 (Практикум на парі)</h5>
<p>
Написати XML-документ для збереження даних <b>про облікові записи користувачів</b>. Про кожнен обліковий запис в документі зберігаються дані про:
<ul><li>Ім'я користувача</li>
<li>Логін</li>
<li>Пароль</li>
<li>Дата створення облікового запису</li>
</ul>
Додати в документ інформацію мінімум про трьох користувачів. По можливості розробити CSS документ для оформлення розробленого XML-документа.
</p>
<h5>Завдання 2</h5>
<p>Написати XML документ для збереження даних <b>про рецепти</b>, тобто книгу рецептів. Кожен рецепт (recipe) буде мати наступну структуру, тобто зберігати дані про:
<ol><li>назва (title) – назва рецепту;</li>
<li>фото (photo) – необов’язковий пустий елемент, який містить фото блюда;</li>
<li>інгридієнти (ingredients):<ul>
<li>інгридієнт (item) – назва інгридієнту;</li>
<li>кількість (quantity) – необхідна кількість;</li></ul>
</li>
<li>приготування (preparation) – власне сам рецепт;</li>
<li>порції (serving) – вихід;</li>
<li>калорійність (energy) – необов’язковий елемент, що містить інформацію про калорійність блюда:<ul>
<li>білки (proteins);</li>
<li>жири (fats);</li>
<li>вуглеводи (carbs).</li></ul>
</li>
</ol>
Варто відмітити, що інгридієнтів при приготуванні може бути більше одного, а дочірні елементи в елементі energy (якщо він присутній) можуть розміщуватись в будь-якому порядку. Крім того, ряд елементів можуть мати додаткові властивості, які в XML-документі відображаються за допомогою <b>атрибутів</b>:<ol>
<li>батьківський елемент кожного окремого рецепту (recipe) обов’язково буде мати ідентифікатор;</li>
<li>елемент photo має обов'язковий атрибут href, який містить шлях до зображення;</li>
<li>елемент quantity містить обов’язково інформацію про одиницю виміру (грами, літри, ст.ложка тощо);</li>
<li>елемент preparation може містити дані (по бажанню, тобто необов'язкові атрибути) про:<ul>
<li>ступінь складності, який може містити одне з наступних значень:<ul style="list-style-type:circle">
<li>для початківців;</li>
<li>для досвідчених;</li>
<li>для майстрів.</li></ul>
По замовчуванню приймається “для початківців”.
</li>
<li>час приготування;</li>
<li>додаткові характеристики з можливими значеннями:<ul style="list-style-type:circle">
<li>для вегетаріанців;</li>
<li>для діабетиків;</li>
<li>низькокалорійно;</li>
<li>можна заморожувати.</li></ul>
</li></ul></li>
</ol>
</p>
<p><b>ПРИМІТКА!</b> Рецептів в документі має бути <b>мінімум 3 шт</b>. Спробувати різні варіації опису рецептів: з використанням всіх можливих атрибутів i елементів та з відсутністю необов'язкових.</p>

<h5>Завдання 3</h5>
<p>Оформити створений XML документ за допомогою CSS. В оформленні проявіть фантазію. Чим більше фантазії, тим вища оцінка. Наприклад:<br/> <a href="images/book_0.gif">Книга рецептів 1</a><br/><a href="images/book_1.gif">Книга рецептів 2</a><br/> <a href="images/book_2.gif">Книга рецептів 3</a></p>

<p><b>ПРИМІТКА!</b> Оцінка за завдання №2 складає 75% загальної оцінки. Інші 25% - за виконання третього завдання (на оцінку впоиває естетичний вигляд роботи).</p>
<hr />
<h3>Урок 2. Введення в DTD (Data Type Definition). Область CDATA</h3>
<h5>Завдання 1</h5>
<p>До створеного XML документа з попереднього домашнього завдання (книга рецептів) напишіть DTD-документ. Крім того, необхідно додати можливість виведення в кінці XML-документа інформації про авторські права на розробляєму книгу рецептів за допомогою сутності.</p>
<h5>Завдання 2</h5>
<p>Створити <b>пераметричну сутність</b>, яка описує використання <b>елемента FullAddress</b>, що може мати наступні атрибути:<ul>
<li>Country – обов’язковий атрибут для опису інформації про країну, що має фіксований набір значень (наприклад, Україна, Росія, Білорусія та США);</li>
<li>Town – обов’язковий атрибут для збереження інформації про місто;</li>
<li>Street – необов’язковий атрибут для збереження даних про вулицю, будинок та квартиру (якщо існує).</li>
</ul>
В XML документі такий елемент матиме наступний вигляд:

<example>
<![CDATA[<FullAddress Country="Росія"   Town="Воронеж" Street="Лизюкова, д.12, кв.100" />
<FullAddress Country="Україна" Town="Львів" /> ]]>
</example>
</p>
<hr />
<h3>Урок 3. Простори імен XML. Приклади створення XSD схем</h3>
<h5>Завдання 1</h5>
  <p>До створеного на попередніх парах XML документа (книга рецептів) напишіть <b>XSD-схему</b>. Додати також анотацію, яка описує призначення схеми та інформацію про авторські права, а також мінімум дві анотації до елементів, атрибутів або нових типів даних. При описі схеми обов’язково скористатись посиланнями.</p>
<h5>Завдання 2</h5>
<p>Створити нові типи, які дозволять описати наступні прості елементи XML-документа:<ul>
<li>e-mail або URL адресу;</li>
<li>дійсне число в мові програмування С/С++. Наприклад: +0.5, .6, 89. , -2.e+5, +2.E5, -2.f тощо.</li>
</ul>
</p>
<h5>Завдання 3</h5>
<p>Написати <b>XML-документ «Академія»</b>, що має наступну структуру:<ol>
<li>Групи, що мають наступні властивості (<b>атрибути</b>): <ul>
<li>назва групи, яка формується по наступному принципу: <ul style="list-style-type:circle">
<li>перша цифра вказує на номер потоку; </li>
<li>далі йде абревіатура форми навчання (С або НС);</li>
<li>наступні цифри вказують на початок годин гавчання;</li>
<li>дефіс;</li>
<li>номер групи;</li> 
<li>скорочена назва спеціальності.</li></ul>
Наприклад, 7C8-1пр або 7HC8-1гр.
</li>
<li>спеціалізація (може приймати одне з трьох значень: адміністрування, програмування, дизайн).</li>
</ul>
До складу групи входять студенти (<b>кожен представлений елементом</b>), кожен з яких має: <ul>
<li>повне ім’я (<u>атрибути</u>: імя, прізвище та по-батькові);</li>
<li>повна адреса (<u>дочірні елементи</u>: країна, місто, вулиця, дім, телефон (регулярний вираз), email (регулярний вираз));</li>
<li>розмір стипендії (максимум 500 грн.).</li></ul>

Передбачити, щоб ПІБ не містило недопустимих символів (цифр, *, _, -,  тощо).
</li>
<li>Предмети, кожен з яких містить дані про: <ul>
<li>назву предмету;</li>
<li>план курса (назва прикріпленого документа з описом плану; можна з шляхом).</li></ul></li>

<li>Викладачі, про кожен з яких зберігається наступна інформація: <ul>
<li>повне ім’я (<u>атрибути</u>: імя, прізвище та по-батькові);</li>
<li><b>список</b> предметів, які він читає;</li>
<li>кількість груп, в яких він читає (не може бути більше 10 або від’ємним).</li></ul></li>
</ol>
Написати також <b>XSD-схему</b> до вищеописаного XML документа. До схеми включити коротку анотацію про її роботу.</p>
 <!-- <h3>Модуль 7. DOM в XML</h3>
<h5>Завдання 1</h5>
  <p>По <a href="#" onclick="window.open('doc/class_definition.xml'); return false;">шаблону XML документа</a>, який описує звичайний клас С/С++, написати свій власний клас. Написаний документ засобами DOM необхідно трансформувати в звичайний файл реалізації (.cpp) з звичним кодом.</p>
<h5>Завдання 2</h5>
  <p>Написати до XML документа <a href="#" onclick="window.open('doc/Object.xml'); return false;">Object.xml</a> XSD документ та XSLT документ з правилами трансформації його в HTML. Вихідна сторінка повинна мати вигляд сторінки MSDN, яку можна переглянути за адресою: <a href="http://msdn.microsoft.com/ru-ru/library/e5kfa45b.aspx">Object - клас</a>.</p>
<p>Або нижче:<br/><img src="images/object_1.gif" width="70%" /><br /><img src="images/object_2.gif" width="70%"  /></p> -->
</lesson>