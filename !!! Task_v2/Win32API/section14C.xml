<?xml version="1.0" encoding="windows-1251" ?>
<?xml:stylesheet type="text/xsl" href="common/layout.xsl" ?>

<lesson title="Win32API та MFC" next="index.xml" prev="section11C.xml" summ="1">

<h2>14С. ДЗ по курсу Win32API</h2>
  <h3>Модуль 1. Введення. Коротка історія Windows. Перша програма та перше вікно для Windows. Нові типи даних. Венгерська нотація</h3>
  <h5>Завдання 1</h5>
  <p>Написати функцію, яка "вгадує" задумане користувачем число від 1 до 200. Для запиту до користувача використати MessageBox. Після того, як число вгадане, необхідно вивести кількість запитів, які були необхідні для цього, і надати користувачу можливість зіграти ще раз, не виходячи з програми (MessageBox'и оформлюються кнопками і значками відповідно до ситуації).</p>
  <h5>Завдання 2</h5>
  <p>Написати своє вікно.</p>
  <hr/>
  <h3>Модуль 1.1. Перше вікно для Windows. Синхронні та асинхронні повідомлення. Повідомлення WM_PAINT та його обробка. Графічний контекст пристрою (GDI). Малювання тексту. Шрифт як об’єкт GDI та його типи</h3>
  <p>Створити свій шрифт з різними характеристиками. Цим шрифтом вивести багаторядковий текст.</p>
  <hr/>
  <h3>Модуль 2.1. Синхронні та асинхронні повідомлення. Повідомлення WM_PAINT та його обробка. Графічний контекст пристрою (GDI). Малювання тексту. Шрифт як об’єкт GDI та його типи</h3>
  <p>Написати програму, в якій при натисненні довільної клавіши запускається тест, який містить мінімум 3 питання. Для запиту до користувача використати MessageBox. Після проходження тесту на екрані власним шрифтом виводиться результат здачі тесту.</p>
  <hr/>

  <h3>Модуль 2.2. Примітиви GDI. Малювання відрізків. Перо (pen) та пензлик (brush) як об’єкти GDI.</h3>
  <h5>Завдання 1</h5>
  <p>Створити два градієнтні пензлі (brush), якими зафарбувати дві довільно обрані замкнуті області (сегмент, прямокутник тощо). Градієнти можуть бути довільні: діагональний, від центру тощо</p>
  <h5>Завдання 2</h5>
  <p>За допомогою засобів GDI створити табличку 5*5 прямокутників. Зафарбувати їх кольорами, які обираються за допомогою генератора випадкових чисел (рандомайзом) та на кожному прямокутнику вивести надпис – колір прямокутника в 16-вій системі числення. (ПРИМІТКА. Аналог таблиці кольорів в графіці)</p>
  <hr />

  <h3>Модуль 2.3.Системи координат. Вікно та область виводу. Бітові карти. Клас CImage. Повідомлення WM_TIMER</h3>
  <p>Написати програму для перегляду зображень. Зображення для перегляду завантажуються з визначеної папки та вибираються рандомайзом (довільним чином). Ефекти для перегляду також визначаються рандомайзом.</p>
  <hr/>

  <h3>Модуль 2.4.Контекст памяті</h3>
  <h5>Завдання 1</h5>
  <p>Створити контекст пам’яті, зафарбувати його довільним кольором. Через деякий час в контекст пам’яті завантажити малюнок, а потім надрукувати по літерам довільний текст.</p>
  <h5>Завдання 2</h5>
  <p>Написати мультфільм.</p>
  <hr/>

  <h3>Модуль 3. Введення в GDI+. Базовий клас Graphics. Трансформація засобами GDI+</h3>
  <h5>Завдання 2</h5>
  <p>Написати невеличку демонстраційну програму з використанням функцій GDI+, яка повинна відповідати наступним вимогам:
  <ul>
    <li>вся графічна частина повинна бути реалізована функціями GDI+;</li>
    <li>на "малюнку" повинна бути присутня анімація довільного обєкта(-ів);</li>
    <li>обовязковим є використання шляхового градієнта.</li>
  </ul>
  </p>
  <h5>Завдання 2</h5>
  <p>Використовуючи набір функцій GDI+ намалювати будиночок з сонечком.  Використовуючи набір функцій для трансформації GDI+ (transform, rotate, scale…), розташувати біля дому довільний об’єкт, що рухається.</p>
  <p>
    <b>Примітка.</b>Сонечко - PathGradientBrush, дах будинку – FillPath.
  </p>
  <h5>Завдання 3</h5>
  <p>Намалювати об’єкт (м’ячик, куб тощо), який відбивається від меж екрану</p>
  <hr/>

  <h3>Модуль 4. Основні поняття про клавіатуру. Апаратні та символьні повідомлення. Повідомлення німих клавіш</h3>
  <h5>Завдання 1 (на 9 балів)</h5>
   <p>Написати програму з наступними вимогами:<br/>
     <ol>
       <li>За допомогою клавіш управління курсором по екрану переміщується курсор.</li>
       <li>При натисненні на клавішу Enter на місці курсору малюється довільна фігура або малюнок.</li>
       <li>Очистка екрану здійснюється на клавішу Esc.</li>
       <li>В випадку натиснення комбінації клавіш, наприклад <![CDATA[ <Alt+VK_xxx> ]]> або повторного натиснення клавіши Enter над вже намальованою фігурою здійснюється інверсія її кольору.</li>
  </ol></p>
  <h5>Завдання на 12 балів</h5>
  <h5>Завдання 2 </h5>
  <p>Написати програму, яка здійснює ефект "світломузики" для клавіш-перемикачів (Caps Lock, Num Lock, Scroll Lock).</p>
  <hr/>

  <h3>Модуль 5. Повідомлення миші, пов’язані з робочою та неробочою областю вікна</h3>
  <p>Гра – злови мене. На клієнтській області знаходиться зображення, яке на тік таймера довільно переміщується. Задача – Ви повинні мишкою зловити даний об’єкт, якщо зловили, то видається відповідне повідомлення (Реалізувати також виведення на екран статистики попадань/непопадань).</p>
    <hr/>

  <h3>Модуль 6,7,8. Використання ресурсів. Меню як ресурс. Акселератори. Модальні та немодальні вікна діалогу.</h3>
  <h5>Завдання 1</h5>
  <p>Написати програму, в якій реалізувати систему меню з двох основних пунктів. <br/>1 – Файл:<br/>
    - зміна курсора<br/>- сепаратор<br/>- вихід.
  </p>
  <p>2 - Малювання:<br/>
    – малювання іконки на клік мишки<br/>– малювання прямокутника на рух мишки (Solid або Hatch Brash)<br/>
    – малювання еліпса текстурним пензлем (Pattern (Texture) Brush);<br/>– малювання лінії.
  </p>
  <h5>Завдання 2</h5>
  <p>Додати до попередньо створеної програми акселератори.</p>
<h5>Завдання 3</h5>
<p>Доповнити програму системним меню, в якому є додатковий пункт меню "Про програму" (About - модальний діалог) та "Зафарбовування вікна" (стандаpтне діалогове вікно)</p>
  <h5>Завдання 4</h5>
  <p>Додати до створеної програми контекстне меню з наступними пунктами:<br/>1 – Про програму (з’являється модальне діалогове вікно About)
  <br/>2 – Сепаратор<br/>3 - Вихід</p>

  <hr/>

  <h3>Модуль 9. Основні поняття про елементи управління. Кнопки</h3>
  <p>Написати тестувальну систему, в якій як мінімум складається з трьох питань. Результат тесту виводиться при натисненні на кнопку "Результат".<br/>
    <b>ПРИМІТКА! Одне питання організоване за допомогою флажків (checkbox), а два інших за допомогою перемикачів (radio buttons).</b>
  </p>
  <hr/>

  <h3>Модуль 10. Елементи управління "текстове поле" та "список". Робота з файлами.</h3>
  <p>Написати блокнот-шифрувальник, який має вигляд звичайного блокноту з полем Edit та Menu.<br/>
   <ol start="1">
     <li>File: <ul><li>Open File</li><li>Save File</li><li>Separator</li><li>Exit</li></ul></li>
     <li>Edit: <ul><li>Coder/Decoder</li><li>History</li></ul></li>
     </ol>
     На пункт меню <b>History</b> відкривається діалогове вікно, в якому міститься список файлів, які колись кодувались/ декодувались. При виборі одного із пунктів списку і натисненні на кнопку "Відкрити" відкривається данний файл.
    </p>
   <p><b>Примітка.</b> Для кодування тексу можливо використовувати XOR.</p>
  <hr/>
  
  <h3>Модуль 11. Сімейство полос прокрутки</h3>
  <p>До пункту меню Edit попередньої програми додати пункт <b>GenPasswd</b>.</p>
  <p>При виборі даного пункту відкривається діалогове вікно, на якому розміщуються елементи управління, що дозволяють здійснити генерацію паролів:<br/>
  <ol start="1">
  <li>SpinButtonControl, який визначає кількість символів в паролі</li>
  <li>чотири CheckBox’и: <ul>
  <li>Чи будуть в паролі цифри</li>
  <li>Чи будуть прописні літери</li>
  <li>Чи будуть заглавні літери</li>
  <li>Спеціальні символи, які задаються в суміжному текстовому полі. Причому, якщо даний пункт не вибраний – текстове поле неактивне.</li>
  </ul></li>
  <li>Текстове поле, в якому виводиться пароль</li>
  <li>три кнопки: згенерувати, очистити, вихід</li></ol>
  </p>
    <hr/>
<h3>Модуль 13. Основні відомості про процеси. Функції маніпулювання потоками. Бібліотека ToolHelp для Windows 2000/9х/NT</h3>
  <p>Написати програму-аналог taskmgr, яка дозволяє:
  <ul>
    <li>переглядати список активних процесів, разом з їх ідентифікаторами</li>
    <li>переглядати список потоків обраного процесу</li>
    <li>переглядати список модулів обраного процесу</li>
    <li>завершувати виконання обраного процесу</li>
  </ul></p>
  <hr/>
  <h3>Модуль 14. Багатопоточність. Потоки і WinAPI. Потоки в MFC та клас CWinThread. Локальна пам’ять потоку (Thread Local Storage [TLS])</h3>
  <p>Доповніть, створений taskmgr наступними можливостями:
  <ol start="1">
    <li>Можливість змінювати пріоритет обраного процесу та пріоритети потоків в розрізі обраного процесу.</li>
    <li>Можливість призупиняти та відновлювати виконання обраного потоку.</li>
    <li>В відповідь на реакцію (наприклад, натиснення кнопки чи обрання відповідного пункту меню тощо) створювався новий потік в середині того процесу, який є зараз активним (потік може виконувати довільну дію).</li>
    </ol> 
  </p>
  <hr/>
  <h3>Модуль 16. Память. Робота з віртуальною памяттю.</h3>
<p>Реалізувати по максимуму закладку "Швидкодія" Диспетчера задач, яка має наступний вигляд:<br/>
<img src="images\taskmgr.jpg" /><br/>
Додати реалізацію в розроблий Вами taskmgr.
</p>
<hr/>
  <h3>Модуль 17. Робота з основною і приватною кучою потоку (heap). Файли, відображаємі в память (File Mapping)</h3>
<p>Написати програму, яка працює з відображаємими в память файлами. Спроектувати в адресний простір невеликий файл та відсуртуйте його вміст. Після чого відобразіть на екрані вміст спроектованого файла. 
</p>
<hr/>
  <h3>Модуль 18. Основні відомості про реєстр. Робота з реєстром засобами Win32 API. Віддалене підключення до реєстру</h3>
  <p>Написати свій власний regedit в консолі. Для роботи використовується система меню, що містить наступні пункти для здійснення визначених операцій:
  <ul>
    <li>вибір гілки гілки реєстра для подальшої роботи (HKEY_CLASSES_ROOT, HKEY_CURRENT_USER,...)</li>
    <li>пункт меню Add section, який дозволяє додати довільну нову гілку реєстра з назвою, яку задає користувач</li>
    <li>пункт меню Add value, який дозволяє вказане користувачем значення додати в необхідну гілку реєстра. 
    Передбачити можливість вибору користувачем типу значення (можна встановити для цієї дії enum).</li>
    <li>пункти меню: Delete section та Delete value, що дозволяють здійснити визначені видалення з реєстру</li>
    <li>пункт меню View, що дозволяє здійснити перегляд розділів вказаної гілки реєстру (на вибір користувача)</li>
    <li>пункт меню View section, що дозволяє здійснити перегляд підрозділів на значень вказаного розділу реєстра</li>
  </ul>
  </p>
 <hr/>
  <h3>Модуль 19. Динамічно підключаємі бібліотеки (DLL). Явне та неявне звязування. Память DLL та файли визначення модуля (.def файли)</h3>
  <h5>Завдання 1</h5>
  <p>Написати DLL, що містить дві довільні функції для малювання. <br/>Створити дві програми-реалізації функцій даної бібліотеки (на базі Win32API):
<ul><li>перша підключає бібліотеку статично</li>
<li>друга підключає бібліотеку динамічно</li>
</ul></p>
  <h5>Завдання 2</h5>
  <p>
Реалізувати функцію (в залежності від варіанту) бібліотеки kernel32.dll. <b>Вимога:</b> бібліотека з прикладною програмою звязується динамічно.<br/>
Варіанти реалізації функцій:
<ul>
<li>CreateDirectory</li>		
<li>GetFileAttributes</li>		
<li>GlobalAlloc</li>	
<li>MoveFile</li>	
<li>WriteFile</li>	
<li>WinExec</li>
<li>ReadConsole</li>
</ul>
<b>ВИМОГА! </b>Програма повинна бути написана на базі Win32API, крім випадку реалізації функції ReadConsole
</p>
<h5>Завдання 3</h5>
  <p>
Написати DLL, яка має в памяті сектор, доступний для читання та запису іншим процесам. В цьому секторі розміщується масив з 10 елементів типу int.<br/>
В цій DLL також міститься три методи для роботи з даним масивом: <ul><li>FillArray для заповнення масиву, який йому передають</li><li>SortArray, що дозволяє відсортувати масив (експортуєма функція)</li><li>PrintArray, що виводить масив на екран(експортуєма функція)</li></ul>
Опис DLL здійснити за допомогою .def файла та директив препроцесора, які для цього призначені (в двох варіантах). <b>ПРИМІТКА!</b> Забороняється використовувати модифікатори _declspec(dllexport) та _declspec(dllimport).
</p>
<p>Прикладна програма динамічно підєднує бібліотеку, дає можливість користувачу заповнити масив, що належить DLL, а також за допомогою методів DLL SortArray та PrintArray сортує та виводить масив на екран.</p>
  <hr/>
  <h3>Модуль 20.2. Мережеве програмування. Сокети</h3>
  <p>
Написати простий чат. Чат може складатись окремо з серверної та клієнтської частини, або ж включати в себе і одну і другу частину.<br/>
Клієнтська частина чату обовязково повиннна містити:<ul><li> діалогове вікно реєстрації нового користувача при підключенні до сервера, </li><li>надавати список мережевих підключень користувачів, </li><li>містити область для написання власних повідомлень,</li><li>частину, де висвітлюються всі розмови між клієнтами чату</li></ul>
</p>
<p><b>ПРИМІТКА!</b> В випадку реалізації серверної частини окремо, допускається зробити її консольною.
</p>
</lesson>