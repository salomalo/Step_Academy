<?xml version="1.0" encoding="windows-1251" ?>
<?xml:stylesheet type="text/xsl" href="common/layout.xsl" ?>

<lesson title="Win32API та MFC" next="section19C.xml" prev="section8C.xml" summ="1">

<h2>18HС та НС. ДЗ по курсу Win32API</h2>
  <h3>Урок 1. Перше вікно для Windows.</h3>
  <h5>Завдання 1</h5>
<p>Написати програму, яка вгадує задумане користувачем число від 1 до 100. Для запиту до користувача використовуються вікна повідомлень. Після того, як число відгадано, необхідно вивести кількість спроб, які для цього знадобились і надати користувачу можливість зіграти ще раз, не завершуючи програму. Вікна повідомлень оформити кнопкам та іконками. Основне вікно програми являється необовязковим.</p>
  <h5>Завдання 2</h5>
  <p>Написати програму, в якій при натисненні довільної клавіши на вікні запускається тест, який містить мінімум 3 запитання. Для запиту до користувача використати MessageBox. Після проходження тесту на вікні виводиться результат здачі тесту. Наприклад: <br/> <img src="images/test_1.gif" width="70%" /></p>
  <hr/>

 <h3>Урок 2. Введення в GDI. Шрифти та робота з текстом. Примітиви та обєкти GDI перо (pen) та пензлик (brush). Клас CImage. Контекст пам'яті</h3>
  <h5>Завдання 1</h5>
  <p>Створити два градієнтні пензлі (brush), якими зафарбувати дві довільно обрані замкнуті області (сегмент, прямокутник тощо). Градієнти можуть бути довільні: діагональний, від центру тощо. Наприклад:<br/>
<img src="images/gradient.gif" width="600px" /></p>
  <h5>Завдання 2</h5>
  <p>За допомогою засобів GDI створити табличку 5*5 прямокутників. Зафарбувати їх кольорами, які обираються за допомогою генератора випадкових чисел (рандомайзом) та на кожному прямокутнику вивести надпис – колір прямокутника в 16-вій системі числення. (ПРИМІТКА. Аналог таблиці кольорів в графіці). Наприклад:<br/>
<img src="images/colortable.gif" width="550px" align="left" /> <img src="images/colortable2.gif" width="500px" /></p>
<p><br clear="both" /></p>
<h5>Завдання 3 (додаткове завдання)</h5>
<p>Написати мультфільм на довільну тему. Приклад базового файла bmp, який визначає кадри мультфільму наведений нижче:<br/>
<img src="images/mult.bmp" /><br /><img src="images/mult_2.gif" width="200px" /></p>
<p><b>Примітка!</b> Для створення мультфільма дозволяється скористатись і набором зображень для анімації.</p>
<hr/>

  <h3>Урок 3. Основні поняття про клавіатуру. Повідомлення миші, пов’язані з робочою та неробочою областю вікна. Таймер</h3>
  <h5>Завдання 1 (на вибір)</h5>
<h5>на 9 балів:</h5>
  <p>Написати програму з наступними вимогами:<br/>
    <ol>
	<li>При натисненні на клавішу Enter вікно вашої програми позиціонується в лівий верхній кут екрану з розмірами 300х300.</li>
      <li>За допомогою клавіш управління курсором здійснюється переміщення вікна.</li>
      <li>При натисненні комбінації клавіш, наприклад <![CDATA[ <Alt+VK_xxx> ]]>, ваше вікно починає переміщуватись по периметру екрана з певною швидкістю.</li>     
      <li>Натиснення клавіші Esc відміняє переміщення вікна.</li>
    </ol>
  </p>
  <h5>на 12 балів:</h5>
  <p>Написати програму, яка здійснює ефект "світломузики" для клавіш-перемикачів (Caps Lock, Num Lock, Scroll Lock). Наприклад:<br/>
<img src="images/key_music.gif" width="300px" /> </p>
  <h5>Завдання 2</h5>
  <p>Гра – злови мене. На клієнтській області знаходиться зображення, яке на тік таймера довільно переміщується. Задача – Ви повинні мишкою зловити даний об’єкт, якщо зловили, то видається відповідне повідомлення.</p>
<p>По бажанню, можна розробити різні рівні сладності гри. Наприклад, після того, як зловили зображення 10 разів, швидкість його руху збільшується. В такому разі можна передбачити довільні умови виходу з гри: досягли відповідного рівня або натиснули правою клавішою миші по екрану і виводиться пропозиція виходу з гри тощо.</p>
<p>У випадку закінчення гри виводиться інформація про гру: кількість попадань, досягнутий рівень тощо.</p>
<p><b>Примітка!</b> Оцінка залежить від реалізації гри.</p>
  <hr/>

  <h3>Урок 4.Використання ресурсів. Меню як ресурс. Акселератори. Використання стандартних діалогових вікон.</h3>
   <p>Написати програму, в якій реалізувати <b>систему головного меню</b> з двох основних пунктів: <ol><li>Файл:<ul><li>укр./англ.<sup>*</sup></li><li>зміна курсора</li><li>сепаратор</li><li>вихід.</li></ul></li>
<li>Малювання:<ul><li>малювання іконки на клік мишки</li><li>малювання прямокутника на рух мишки (Solid або Hatch Brash)</li>
<li>малювання еліпса текстурним пензлем (Pattern (Texture) Brush);</li><li>малювання лінії.</li></ul></li>
</ol></p>
  <p>Всі ресурси (іконки, курсори тощо) повинні бути створені вами. До пунктів головного меню додати акселератори (не обов'язково до всіх).</p>
<p>Програма повинна також містити<b> контекстне меню</b> для зміни фону фігури (пензлика). Може містити орієнтовно наступні пунти меню
<ul><li>Cross</li><li>Diagonal</li><li>Bubble</li><li>Red</li></ul>Кожен пункт такого меню може супроводжуватись іконкою з показом фону для фігури (на 12 балів).</p>

<p><sup>*</sup> Передбачає зміну мови меню з української на англійську і назад. Для цього в програмі небхідно реалізувати два ідентичних меню, одне з яких містить англійські назви, а інше - українські. При старті програми завантажується українське меню. При виборі пункта меню "укр./англ." завантажується англомовне меню і навпаки. По суті, просто робиться підміна одного меню іншим.</p>
   <hr/>
  <h3>Урок 5. Модальні та немодальні вікна діалогу. Елементи управління: кнопки та статичні поля</h3>
   <h5>Розпочати роботу над КУРСОВИМ ПРОЕКТОМ (Блокнот-шифрувальник)</h5>
<p>Необхідно розробити каркас <b>Блокнота-шифрувальника</b>, який буде мати вигляд звичайного блокноту та містити меню для здійснення основних дій:
 <ol start="1">
     <li>File: <ul><li>Open</li><li>Save</li><li>Save As...</li><li>Separator</li><li>Exit</li></ul></li>
     <li>Edit: <ul><li>Coder/Decoder</li><li>Clear (очистка вмісту текстового редактора)</li><li>Find and Replace</li><li>History</li></ul></li>
<li>View: <ul><li>Register (регістр)</li></ul></li>
     </ol>
	 Після розробки меню необхідно зробити <u>просту обробку пунктів меню <b>File</b> без прив'язки до основних даних</u>. Тобто зробити так, щоб при виклику пункта меню Open або Save As... просто викликалось діалогове вікно "Відкриття/збереження файлів", при виклику пункта Exit можна було вийти з програми.</p>

<p>Для пункта меню <b>View / Register</b> необхідно розробити <u>каркас діалогового вікна</u>. Сам функціонал буде реалізований в наступному уроці. Отже, пункт меню <b>Register</b> дозволяє змінити регістр тексту в текстовому полі за допомогою відповідного діалогового вікна, яке містить допоміжну групу радіокнопок:<ul><li>Всі прописні літери</li><li>Всі заглавні літери</li>
    <li>Лише перша заглавна</li><li>Лише перша прописна</li></ul>
Орієнтовний вигляд даного діалогу:<br /><img src="images/register.gif" />
</p>
<p>Пункт меню <b>Edit</b> буде розроблений на наступному занятті.</p>
<p><b>Примітка!</b> Прикріпіть до необхідних на вашу думку пунктів меню акселератори.</p>
<!--
<p>Доповнити програму з ДЗ № 4 системним меню, в якому є додатковий пункт меню "Про програму" (About - модальний діалог) та "Зафарбовування вікна" (стандаpтне діалогове вікно зміни кольору)</p>
  <h5>Завдання 2</h5>
  <p>Доповнити програму також контекстним меню з наступними пунктами:<ul><li>Про програму (з’являється немодальне діалогове вікно About)</li><li>Сепаратор</li><li>Вихід</li></ul></p> -->
  <hr/>
 <h3>Урок 6. Елементи управління "текстове поле" та "список". Робота з файлами засобами Win32 API. Обмін даними з діалоговим вікном</h3>
  <p>Закінчити роботу над блокнотом-шифрувальником. Для цього необхідно в основну робочу область помістити текстове поле (Edit), аналогічно звичайному блокноту (Notepad), а також написати основний функціонал для пунктів меню File та вікна Register (для зміни регістру тексту).</p>
   <p>Обробити пункт меню <b>Find and Replace</b>, для якого необхідно самому створити аналог стандартного немодального діалогового вікна Find/Replace та реалізувати пошук і заміну слів або словосполучень.<br />
Орієнтовний вигляд даного діалогу:<br /><img src="images/FindReplace.gif" /></p>
<p>Пункт меню <b>History</b> дозволяє відкрити діалогове вікно з списком файлів, які колись кодувались/декодувались. При виборі одного із пунктів списку і натисненні на кнопку "Open" відкривається обраний файл.</p>
<p>Необхідно також доробити інші пункти меню пункта <b>Edit</b>.</p>
<p><b>Примітки!</b><ol><li>Для кодування тексту можна використати оператор XOR (^).</li><li>В допомозі також можуть стати наступні повідомлення: EM_GETSEL, EM_SETSEL, EM_REPLACESEL, WM_CLEAR тощо.</li></ol></p>
</lesson>