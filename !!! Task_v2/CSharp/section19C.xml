<?xml version="1.0" encoding="windows-1251" ?>
<?xml:stylesheet type="text/xsl" href="common/layout.xsl" ?>

<lesson title="C#" next="index.xml" prev="section18HC.xml" summ="1">
<h2>19С. Домашні завдання по курсу C#</h2>
  <h3>Урок 1. Введення. Перша програма. Типи даних та змінні. Приведення до типу. Введення та виведення даних. Оператори. Умовні оператори if та switch. Цикли</h3>
<h5>Завдання 1</h5>
  <p>Дані цілі позитивні числа А, В, С, значення яких вводиться з клавіатури користувачем. На прямокутнику розміра А*В розміщена максимально можлива кількість квадратів зі стороною С. Квадрати не накладаються один на одний. Знайти кількість квадратів, розміщених на прямокутнику, а також площу незайнятої частини прямокутника.
  </p>
<p>Необхідно також передбачити виведення службових повідомлень у випадку, якщо в прямокутнику неможливо розмістити жодного квадрата з стороною С (наприклад, якщо значення С перевищує розмір сторін прямокутника).</p>
<h5>Завдання 2</h5>
  <p>Початковий вклад в банку рівний 1000 грн. Через кожен місяць розмір вкладу збільшується на Р процентів від наявної суми (Р - дійсне число, 0 &lt; P &lt; 25). Значення Р программа повинна отримувати від користувача. По даному Р программа повинна визначити, через скільки місяців розмір вкладу перевищить 1100 грн. та вивести знайдену кількість місяців К (ціле число) та підсумковий розмір вкладу S (дійсне число).
  </p>
<p>Орієнтовний приклад реалізації: <br/> <img src="images/01.02.gif" /></p>
<h5>Завдання 3</h5>
  <p>Дані цілі позитивні числа А та В (А &lt; В). Вивести всі цілі числа від А до В включно; кожне число повинно виводитись з нового рядка. При цьому кожне число повинно виводитись кількість разів, яке рівне її значенню, наприклад, число 3 виводиться 3 рази.</p>
<p>Наприклад: якщо А = 3, а В = 6, .то програма повинна сформувати в консолі наступний вивід:</p>
<example>
3 3 3
4 4 4 4
5 5 5 5 5
6 6 6 6 6 6
</example>
<h5>Завдання 4</h5>
  <p>Дано ціле число N (&gt; 0). Необхідно знайти число, отримане при зчитуванні числа N з права на ліво, тобто реверсоване число. Наприклад, якщо було введено число 345, то програма повинна вивести число 543.</p>
 <hr/>
<h3>Урок 2. Масиви. Рядки. Аргументи командного рядка.</h3>
<p>
<ol>
<li>Даний одновимірний цілочисельний масив, дані для якого вводяться користувачем. Перетворити даний масив таким чином, щоб спочатку йшли всі додатні елементи, а потім від'ємні без зміни основного порядку. Наприклад,
<example>
//початковий масив
2  -3   10   -4  -3  7  9  0
//після перетворення
2  10  7  9  0  -3  -4  -3
</example>
</li>
<li>Даний двухвимірний масив розмірністю MxN. Необхідно заповнити його довільними числами в діапазоні від -50 до 200, вивести на екран і видалити стовпчик з вказаним номером</li>
<li>Даний рваний (зубчастий) масив, заповнений випадковими дійсними числами. Виконати циклічне зрушення масиву вниз або вверх (визначає користувач) на вказану користувачем кількість кроків.</li>
<li>Даний рядок. Необхідно з рядка 1 видалити всі символи, які зустрічаються в рядку 2. Вивести результат, а також статистику по обробці: кількість видалених символів і кількість символів, яка залишилась в результаті обробки.</li>
<li>Написати програму, яка кодує або декодує повідомлення, яке вказується в командному рядку. Сама дія (кодувати чи декодувати) вказується першим параметром, а потім йде фраза, яка підлягає відповідній операції. Метод шифрування може бути довільним, наприклад, метод XOR з вказуванням ключа, інкрементування на одиницю тощо.</li>
</ol>
</p>
<hr />
<h3>Урок 3. Класи в С# та Garbage Collector.</h3>
<p>Написати клас <b>"Employee" (Працівник)</b>, що описує працівника, містить дані про його ім'я, прізвище, посаду, оклад та номер договору про прийом на роботу. Даний клас має також статичне поле журналу обліку користувачів, який міситить інформацію про працівників, які приймаються на роботу. Це поле ініціалізується в статичному конструкторі. По мірі додавання працівників на підприємство в даний журнал записується номер договору працівника, його імя та прізвище, наприклад:
<example>
Журнал обліку працівників:
Д125, Вова Вованов
Д126-9, Олеся Іванова
</example>
Крім того, в даному класі реалізувати необхідний набір конструкторів та методів, які дозволять вводити, змінювати та виводити інформацію про працівника, а також окремий метод на виведення журналу обліку працівників.
</p>
<p><b>ПРИМІТКА!</b> Опис класу Employee повинен міститись в окремому (*.cs) файлі.</p>
<hr />
<h3>Урок 4. Передача параметрів по ссилці (ref і out параметри). Методи та масиви. Створення методів з змінною кількістю параметрів. Часткові типи (partial types)</h3>
<h5>Завдання 1</h5>
<p>
Написати клас, що складається <b>лише</b> з статичних методів (жодного поля в ньому немає (!)) та реалізує роботу з числами. Він містить наступний набір методів:<ul>
<li>Метод swap, що міняє місцями значення двох змінних типу double.</li>
<li>Метод з змінною кількістю параметрів для обрахунку добутка переданих аргументів.</li>
</ul>
Відмітимо також, що для класа заборонено створення екземпляра, тобто заборонений виклик конструкторів.</p>
<h5>Завдання 2</h5>
<p>
Створити клас <b>"Department" (Відділ)</b>, що містить в собі наступні поля:<ul>
<li>назва відділу</li>
<li>телефон</li>
<li>масив працівників, що також описаний окремим класом <b>"Employee" (Працівник)</b>, який був розроблений в уроці 3 (ДЗ).</li>
</ul>
Даний клас містить набір методів, що дозволяють:<ul>
  <li>здійснити модифікацію даних про відділ</li>
  <li>змінювати інформацію про працівників</li>
  <li>вивести інформацію про відділ вцілому</li>
  <li>додавати / видаляти працівників з/до відділу</li>
  <li>здійснювати вивід інформації по окремій посаді, тобто виводити на екран, наприклад, список менеджерів відділу з інформацією про їх з/п. Працівники виводять у відсортованому вигляді, в порядку спадання їх зарплат.</li>
  <li>виводити загальний ФОП (фонд оплати праці) працівників відділу</li>
  </ul>
В функції Main() створити кілька відділів, наприклад, Бухгалтерію, Відділ маркетингу, Відділ постачання та вивести про них інформацію. Дозволити також користувачу додавати нових працівників у відділ та переміщувати працівника у інший відділ.</p>
<p><b>ПРИМІТКА!</b> Створення класів проводити в окремих (*.cs) файлах. Крім того, оцінка за завдання 2 складає 75% загальної оцінки за ДЗ</p>
<hr />
<h3>Урок 5. Виключення та клас System.Exception. Ключові слова checked та unchecked</h3>
<p>До завдання 2 уроку 4 додати обробку наступних виключних ситуацій та здійснити їх обробку:
<ol>
<li>Перевищення розміру масиву працівників відділу</li>
<li>Видалення даних з пустого масиву (видалення працівника з відділу, якщо в відділі ще немає жодного працівника)</li>
<li>При невірній спробі введення даних (наприклад, недопустимих символів в імені чи прізвищі, введенні символьних даних в числові поля тощо) надати користувачу можливість здійснити повторну спробу введення даних</li>
<li>Перевірка на переповнення даними змінної, що містить значення окладу працівника</li>
</ol></p>
<hr />
<h3>Урок 6. Простори імен. Препроцесор. Компоновочні файли і тип доступу internal.</h3>
<p>Напишіть клас <b>"Parking" (Автопарк, автостоянка)</b>, що складається з масиву машин, які описані окремим класом <b>"Car" (Автомобіль)</b>.
Клас Car містить наступну інформацію:
<ul>
<li>дата реєстрації, яка описується окремим класом <b>"Date" (Дата)</b>;</li>
<li>марка автомобіля;</li>
<li>рік випуску;</li>
<li>колір;</li>
<li>номер.</li>
</ul>
Написати та протестувати методи:
<ul>
<li>виводу інформації про всі зареєстровані автомобілі;</li>
<li>реєстрації нового авто в автопарку;</li>
<li>знищення запису про реєстрацію.</li>
</ul>
При цьому кожен клас описати в окремих файлах, а класи Car та Parking помістити в окремий простір імен <b>Vehicle</b>.
</p>
<hr />
<h3>Урок 7. Перевантаження операторів.</h3>
<p>
Написати клас, який реалізує роботу з <b>"Комлексними числами" (Complex)</b>, які складаються з двох частин (два поля): цілої та дробової частини. Перевантажити для роботи з об'єктами даного класу наступні операції:
<ul>
<li>+ для додавання двох комплексних чисел</li>
<li>- для віднімання двох комплексних чисел</li>
<li>- для віднімання від комплексного числа цілочисельного значення (наприклад, objRes = obj - 5) </li>
<li>* для множення цілочисельного значення, введеного користувачем на комплексне число (наприклад, objRes = 4 * obj)</li>
<li>* для множення двох комплексних чисел</li>
<li>/ для ділення двох комплексних чисел</li>
<li>операції порівняння двох комплексних чисел = = та &lt;</li>
<li>логічні операції <![CDATA[ & та |, а також && та || ]]></li>
</ul>
Додати також методи, для введення та виведення комплексного числа.</p>
<p>В результаті перевантаження операторів, наступний код повинен завершитись успішно та пройти компіляцію:
<example>
Complex c = new Complex(1,1);
Complex b, z;
b = c - (c * c * c - 1) / (3 * c * c);
Console.WriteLine("b = {0}", b);

z = (c - 5) + b;
Console.WriteLine("z = {0}", z);
</example>
</p>

<p><b>ПРИМІТКА!</b> Будь-яке комплексне число може бути представлене як формальна сума x + iy, де x та y - дійсні числа, і - умовна одиниця, тобто число, яке задовільняє рівності i<sup>2</sup> = -1. <br/> <img src="images/complex.gif" /> </p>
<hr />
<h3>Урок 8. Властивості та індексатори</h3>
<p>До завдання, розробленого в уроці 6 додати реалізацію наступних функціональних можливостей:
<ul>
<li>виводу інформації про всі зареєстровані автомобілі, використовуючи доступ по індексу авто в масиві;</li>
<li>отримання посилання на авто по певній ознаці або їх комбінації. При цьому ключ (-і) пошуку вказуються через оператор індексування. Наприклад,
<example>
//буде виведена інформація про всі авто марки BMW
foreach(Car car in parking["BMW"])
   car.Print();   

//буде виведена інформація про всі чорні авто 1990 року випуску
foreach(Car car in parking["black", 1990])
   car.Print();   
</example>
</li>
</ul>
</p>
<hr />
<h3>Урок 9. Успадкування. Віртуальні методи. Абстрактний клас. Аналіз базового класу Object. Упаковка та розпаковка (boxing, unboxing).</h3>
<p>Опишіть класи <b>"Swordsman" (Мечник)</b>, <b>"Archer" (Лучник)</b> і <b>"Mage" (Маг)</b>, кожен з яких є екземпляром базового абстрактного класу <b>"Unit" (штука, елемент)</b> в комп'ютерній грі, і може атакувати, ухилятись від атак і вмирати.</p>
<p>У мечника 15 хіт-поінтів (життів), пошкодження при атаці 5, шанс ухилятись 60%.<br/>
Лучник: 12 hp, 4 dmg, 40% dodge<br/>
Маг: 8 hp, 10 dmg, 30% dodge<br/>
</p>
<p>В main() створіть два масива (ворогуючі сторони) по три юніта в кожному, причому тип юніта (мечник, лучник чи маг) має задаватись випадково, при заповненні цих масивів. Тобто один раз запустивши вашу програму, може створитись три лучники проти мечника і двох магів, іншого - лучник, мечник і маг проти двох мечників і лучника і т.д.</p>
<p>Далі в циклі земулюйте бій між ними, поки бійці однієї з сторін всі не загинуть. В консоль при цьому виводьте повідомлення хто кого атакував, чи вдалась атака, скільки життя залишилось у жертви чи вона загинула. Нехай бій відбувається поступово, по натиснення клавіші spacebar (пробіла), щоб ми могли спостерігати його атака за атакою.</p>
<p>В кінці бою оголосіть, яка команда перемогла (перша/друга, синя/червона, альянс/орки - як вже ваша фанатзія вам підскаже).</p>

<p><b>Примітка!</b> Реалізуйте також можливість, щоб кожен боєць (Воїн, Лучник чи Маг) вишукував серед ворогів суперника свого типу і атакував його. Скажімо, якщо маємо команди:<br />
A11 - M21<br />
A12 - S22<br />
S13 - A23<br />
...то А11 має вибрати своєї ціллю А23.</p>
<p>Якщо ворогів свого типу не знайдено, нехай генерується відповідне повідомлення про помилку та бійці атакують по старим правилам.</p>
<hr />
<h3>Урок 10. Динамічна ідентифікація типів. Використання операторів is, as та typeof.</h3>
<p>Для простору імен <b>System.Windows.Forms</b> використовуючи MSDN Library проаналізувати наступні класи та їх взаємозвязки: ScrollableControl, ContainerControl, Form, UserControl, PropertyGrid, SplitContainer, ToolStripContainer, ToolStripPanel, UpDownBase, DomainUpDown, NumericUpDown, Panel, ToolStrip, Control, ButtonBase, Button, CheckBox, RadioButton, DataGrid, DataGridView, DateTimePicker, GroupBox, Label, ListControl, ListBox, ListView, MonthCalendar, PictureBox, ProgressBar, PrintPreviewControl, ScrollableControl, ScrollBar, Splitter, StatusBar, TabControl, TextBoxBase, ToolBar, TreeView, TrackBar. Побудувати діаграми класів.</p>
<hr/>
<h3>Урок 11. Структури. Перелічувані констранти (enum). Неявно типізовані поля (object, var, dynamic)</h3>
<p>Реалізувати класи <b>House, Basement, Walls, Door, Window, Roof, Worker, TeamLeader, Team та інтерфейси IWorker, IPart</b>.</p>
<p>Всі частини будинку повинні бути структурами та реалізувати <b>інтерфейс IPart</b>, для робочих і бригадира надається базовий <b>інтерфейс IWorker</b>.</p>
<p>Бригада будівельників (Team) будує будинок (House). Будинок складається з фундамента (Basement), стін (Wall), вікон (Window), дверей (Door), даху (Part).</p>
<p>Згідно проекта, в будинку повинно бути 1 фундамент, 4 стіна, 1 двері, 4 вікна і 1 дах.</p>
<p>Врахуйте також, що двері бувають різні: скляні, металеві, дерев’яні, профільні тощо. Фундамент також буває різного виду: стрічковий, збірний, стовпчастий, суцільний, зварний тощо. Реалізувати це за допомогою перелічувальної константи (enum).</p>
<p>Бригада починає роботу, і будівельники послідовно будують будинок, починаючи з фундамента. Кожен будівельник не знає наперед, на чому завершився попередній етап будівництва, тому він "перевіряє", що вже побудовано і продовжує роботу. Якщо в гру вступає бригадир (TeamLeader), він не будує, а формує звіт, що вже побудовано і яка частина роботи виконана.</p>
<p>В кінцевому рахунку на консоль виводиться повідомлення, що будівництво будинку завершено і відображається "малюнок будинку” (циклами).
</p>
<hr />
<h3>Урок 12. Делегати та події</h3>
<p>Реалізувати одне завдання на вибір:</p>
<h5>Завдання 1 - на 9 балів</h5>
<p>
Написати два методи для малювання фігур, що мають один параметр, який містить колір фігури:
<ul>
<li>DrawRectangle - для малювання прямокутника</li>
<li>DrawTriangle - для малювання прямокутного трикутника</li>
</ul>
Створити багатоадресний (multicasting) делегат, який малює ці фігури переданим кольором.</p>
<h5>Завдання 2 - на 12 балів</h5>
<p>Розробити гру <b>"Гонки"</b> з використанням делегатів. Щоб подивитись опис даного завдання натисніть <a href="javascript:void(0)" onClick="idTxt3.style.display='block'">тут</a>.</p>
<div id="idTxt3" style="display:none;">
<p>
<ol style="margin-top:0"><li>В грі використати кілька класів автомобілів (спортивні, легкові, грузові і автобуси).</li>
<li>Розробити методи і властивості для кожного з оголошених класів.</li>
<li>Реалізувати гру у вигляді класу, який за допомогою делегатів управляє автомобілями в процесі гри.</li>
</ol>
Рекомендації по виконанню роботи:
<ol style="margin-top:0"><li>Розробити віртуальний клас <b>"Car" (Автомобіль)</b>. Можна скористатись вже розробленим раніше в уроці 6, тільки допрацювати його. В даному класі зібрати всі спільні поля, властивості, методи, наприклад, максимальна швидкість, «збільшити швидкість», «зменшити швидкість».</li>
<li>Розробити класи автомобілів з конкретною реалізацією конструкторів і методів.</li>
<li>Створити делегат, який працює з об'єктами створених конкретних класів автомобилів і додати події в класи автомобилів.</li>
<li>Клас гри повинен випадковим чином генерувати склад машин, які приймають участь в гонці і за допомогою розроблених делегатів управляти їх параметрами (випадковим чином), наприклад, впливати на швидкість руху.</li>
<li>Гра закінчується, коли якийсь з автомобилів проїхав певну відстань (реалізувати за допомогою подій).</li>
</ol>
</p>
</div>
<hr />
<h3>Урок 13. Інтерфейси та класи колекцій простору імен System.Collections. Спеціалізовані колекції з простору імен System.Collections.Specialized</h3>
<h5>Завдання 1</h5>
<p>Написати метод, що дозволяє створити та реалізувати клас-колекцію SortedList на основі елементів типу double. Оцінка залежить від повноти та якості реалізації методів.</p>
<h5>Завдання 2</h5>
<p>Створити примітивний англо-український і україно-англійський словник, який містить пари слів: назва країн на українській та англійській мовах. Користувач повинен мати можливість обирати напрям перекладу і запитувати переклад.</p>
<p>Для реалізації даного завдання скористатись класом-колекцією Hashtable</p>
<hr />
<h3>Урок 14. Узагалюнюючі класи простору імен System.Collections.Generic. Створення та використання власних узагальнюючих методів, структур, класів, класів-колекцій, інтерфейсів, делегатів, базових класів. Використання обмежень.</h3>
<h5>Завдання 1</h5>
<p>
Написати клас, який містить 2 методи:
<ol style="margin-top:0"><li>метод, який створює та реалізує узагальнюючий клас <![CDATA[SortedSet<T> ]]>на основі елементів типу string та int.</li>
<li>метод, який дозволяє підрахувати скільки разів кожне слово зустрічається в заданому тексті. Результат записати в колекцію <![CDATA[Dictionary<TKey, TValue>]]>.</li></ol></p>
<p>Оцінка залежить від повноти та якості реалізації кожного метода.</p>
<h5>Завдання 2</h5>
<p>Створити узагальнюючий клас, який містить список елементів (<![CDATA[List< T >]]>) та реалізує роботу з ним, включаючи сортування. Клас описати за допомогою узагальнюючих алгоритмів Generics. Сортування реалізувати довільним методом (вибором, бульбашковим тощо).</p>
<p>Даний клас повинен реалізовувати інтерфейси:
<ol><li>IDisposable - для примусового та коректного вивільнення ресурсів.</li>
<li>IEnumerable та IEnumerator - для можливості перебору елементів Вашого класу-колекції за допомогою оператора foreach</li>
</ol>
Написати програму, яка демонструє роботу з розробленим класом для різноманітних типів даних, в тому числі і для класу Complex, розробленого в уроці 7.
</p>

<hr />
<h3>Урок 15. Файли. Директорії. Регулярні вирази</h3>
<p>Написати програму, яка шукає в вказаному каталозі та його підкаталогах (X)HTML-файли та виводить їх список на екран в нумерованому вигляді. Після цього програма пропонує на вибір одну з наступних дій:
<ul>
<li>Видалення обраного файла</li>
<li>Переіменування обраного файла</li>
<li>Перебудову обраного файла</li>
</ul>
<u>Останній пункт меню</u> передбачає за допомогою регулярних виразів здійснювати очистку обраного користувачем файла від тегів вміст і пропонувати зберегти результат в інший текстовий файл.</p>
<p><b>На 12 балів</b> реалізувати збереження результатів пошуку і очистки тегів в окремому файлі звіту (log file). А також додати пункт меню, який дозволяє здійснювати пошук XHTML-файлів по імені, розміру чи даті створення.
</p>
<hr />
<h3>Урок 16. Використання XML в .NET</h3>
<p>Розробити <b>програму по роботі з XML-документом "Список замовлень"</b>, де кожне замовлення складається з кількох товарів. Програма через меню повинна забезпечити:
<ol>
<li>Збереження інформації про замовлення товарів за допомогою класу XmlTextWriter. Інформація вводиться користувачем, але певна частина замовлень може бути створена по замовчуванню для кращого тестування програми.</li>
<li>Перевірку на валідність поточного XML-документа згідно обраної XSD-схеми.</li>
<li>Перетворення поточного XML-документа в HTML-документ (згідно XSLT).</li>
<li>Пошук вказаного користувачем замовлення в XML-документі (за допомогою XPath-виразу).</li>
<li>Вивести отриману інформацію про замовлення на екран за допомогою класів XmlTextReader або XmlDocument (на ваш вибір).</li>
</ol>
Структуру XML-документа, а також XSLT та XSD схему до нього продумати та розробити самостійно.
</p>
<hr/>
<h3>Урок 17. Вказівники в .NET.</h3>
<h5>Дане домашнє завдання являється необов'язковим, на додаткових 12 балів</h5>
<p>Написати структуру <b>Arithmetics</b>, яка складається з двох полів типу int та трьох методів: 
<ul><li>для виводу значень змінних-членів класу на екран (перевантажити для цього метод Object.ToString())</li>
<li>додавання значень членів класу (метод повертає результат додавання)</li>
<li>ділення двох чисел, які передаються в якості параметрів (результат ділення повертається в третій параметр по вказівнику, а повертаємим значенням є стан процесу ділення (вірно чи помилка))</li>
</ul>
Створити вказівник та програти за допомогою нього клас та його методи двома способами: в першому випадку доступ до елеменів та методів класу здійснити через вказівник, а в другому – через розіменування вказівника.
</p>
<hr />
<h3>Урок 18. Відображення (reflection). Атрибути та серіалізація.</h3>
<p>За допомогою відображень вивести на екран весь клас Parking (розроблений в Уроці 6) в розрізі, тобто список його членів, методів тощо. За допомогою обраного користувачем конструктора сконструювати об'єкт та "програти" для нього методи даного класу.</p>
<p><u>По бажанню</u> додайте в клас Parking атрибут для класу, який буде містити інформацію про тип автостоянки: стоянка для вантажних чи легкових авто, депо тощо. А для метода Print() атрибут, який буде вказувати на необхідність друку машин на автостоянці, тобто виводити лише інформацію про парковку, список машин на ній чи всю інформацію.</p>
<p>Серіалізувати всю інформацію (крім даних про колір машин) про автостоянку в XML-файл "parking.xml". Передбачити, щоб номер машини зберігався в якості атрибута (в елементі марки авто).</p>
</lesson>