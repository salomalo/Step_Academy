//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client_Proxy.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DiskResult", Namespace="http://schemas.datacontract.org/2004/07/MyDiskInfo")]
    [System.SerializableAttribute()]
    public partial class DiskResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FreeSpaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TotalSpaceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FreeSpace {
            get {
                return this.FreeSpaceField;
            }
            set {
                if ((object.ReferenceEquals(this.FreeSpaceField, value) != true)) {
                    this.FreeSpaceField = value;
                    this.RaisePropertyChanged("FreeSpace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TotalSpace {
            get {
                return this.TotalSpaceField;
            }
            set {
                if ((object.ReferenceEquals(this.TotalSpaceField, value) != true)) {
                    this.TotalSpaceField = value;
                    this.RaisePropertyChanged("TotalSpace");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IGetDiskInfo")]
    public interface IGetDiskInfo {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetDiskInfo/Res", ReplyAction="http://tempuri.org/IGetDiskInfo/ResResponse",Name="Res")]
        Client_Proxy.ServiceReference1.DiskResult Res(string diskName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetDiskInfo/Res", ReplyAction="http://tempuri.org/IGetDiskInfo/ResResponse")]
        System.Threading.Tasks.Task<Client_Proxy.ServiceReference1.DiskResult> ResAsync(string diskName);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IGetDiskInfo/ResRes", ReplyAction = "http://tempuri.org/IGetDiskInfo/ResResResponse", Name = "ResRes")]
        Client_Proxy.ServiceReference1.DiskResult Res(string diskName, string discSecond);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetDiskInfo/ResRes", ReplyAction="http://tempuri.org/IGetDiskInfo/ResResResponse")]
        System.Threading.Tasks.Task<Client_Proxy.ServiceReference1.DiskResult> ResResAsync(string diskName, string discSecond);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGetDiskInfoChannel : Client_Proxy.ServiceReference1.IGetDiskInfo, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDiskInfoClient : System.ServiceModel.ClientBase<Client_Proxy.ServiceReference1.IGetDiskInfo>, Client_Proxy.ServiceReference1.IGetDiskInfo {
        
        public GetDiskInfoClient() {
        }
        
        public GetDiskInfoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GetDiskInfoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GetDiskInfoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GetDiskInfoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Client_Proxy.ServiceReference1.DiskResult Res(string diskName) {
            return base.Channel.Res(diskName);
        }
        
        public System.Threading.Tasks.Task<Client_Proxy.ServiceReference1.DiskResult> ResAsync(string diskName) {
            return base.Channel.ResAsync(diskName);
        }
        
        public Client_Proxy.ServiceReference1.DiskResult Res(string diskName, string discSecond) {
            return base.Channel.Res(diskName, discSecond);
        }
        
        public System.Threading.Tasks.Task<Client_Proxy.ServiceReference1.DiskResult> ResResAsync(string diskName, string discSecond) {
            return base.Channel.ResResAsync(diskName, discSecond);
        }
    }
}
