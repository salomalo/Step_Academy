//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UICLient.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IGetUserInfo")]
    public interface IGetUserInfo {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetUserInfo/GetInfo", ReplyAction="http://tempuri.org/IGetUserInfo/GetInfoResponse")]
        string GetInfo(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetUserInfo/GetInfo", ReplyAction="http://tempuri.org/IGetUserInfo/GetInfoResponse")]
        System.Threading.Tasks.Task<string> GetInfoAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetUserInfo/Authorize", ReplyAction="http://tempuri.org/IGetUserInfo/AuthorizeResponse")]
        string Authorize(string LoginName, string Pasword, string name, string surname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetUserInfo/Authorize", ReplyAction="http://tempuri.org/IGetUserInfo/AuthorizeResponse")]
        System.Threading.Tasks.Task<string> AuthorizeAsync(string LoginName, string Pasword, string name, string surname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetUserInfo/GetSult", ReplyAction="http://tempuri.org/IGetUserInfo/GetSultResponse")]
        string GetSult(string LoginName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetUserInfo/GetSult", ReplyAction="http://tempuri.org/IGetUserInfo/GetSultResponse")]
        System.Threading.Tasks.Task<string> GetSultAsync(string LoginName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGetUserInfoChannel : UICLient.ServiceReference1.IGetUserInfo, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserInfoClient : System.ServiceModel.ClientBase<UICLient.ServiceReference1.IGetUserInfo>, UICLient.ServiceReference1.IGetUserInfo {
        
        public GetUserInfoClient() {
        }
        
        public GetUserInfoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GetUserInfoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GetUserInfoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GetUserInfoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetInfo(string token) {
            return base.Channel.GetInfo(token);
        }
        
        public System.Threading.Tasks.Task<string> GetInfoAsync(string token) {
            return base.Channel.GetInfoAsync(token);
        }
        
        public string Authorize(string LoginName, string Pasword, string name, string surname) {
            return base.Channel.Authorize(LoginName, Pasword, name, surname);
        }
        
        public System.Threading.Tasks.Task<string> AuthorizeAsync(string LoginName, string Pasword, string name, string surname) {
            return base.Channel.AuthorizeAsync(LoginName, Pasword, name, surname);
        }
        
        public string GetSult(string LoginName) {
            return base.Channel.GetSult(LoginName);
        }
        
        public System.Threading.Tasks.Task<string> GetSultAsync(string LoginName) {
            return base.Channel.GetSultAsync(LoginName);
        }
    }
}
