<?xml version="1.0" encoding="windows-1251" ?>
<?xml:stylesheet type="text/xsl" href="common/layout.xsl" ?>

<lesson title="Урок №2" next="section02.xml" prev="index.xml" summ="1">
<h2>Понятие оператора.</h2>
<p>В прошлом уроке вы познакомились с понятием <b><i>переменная и тип данных </i></b>. Кроме того, в примерах урока, а также домашнем задании мы с вами производили над переменными определенные действия, то есть <i>оперировали данными.</i> Вполне очевидно, что слова <b><i>оператор и оперировать</i></b> имеют одинаковое происхождение, следовательно, согласно простой логике -  
</p>

<p><b>Оператор – конструкция языка позволяющая производить различные действия над данными, приводящие к определенному результату.</b></p>

<p>Все операторы принято подразделять на группы по признаку их действия. Например, арифметические операции – операции, позволяющие производить арифметические действия над данными (сложение, вычитание и так далее). Обо всех подобных группах представленных в языке С, мы будем рассказывать в дальнейшем. На данный момент, следует обсудить более масштабную классификацию всех операторов, принятую вне зависимости от их влияния на содержимое переменных. Итак, все операторы делятся на:</p>

<p>1.<b>Унарные</b> – операторы, которым необходим, только один операнд (данные, над которыми производится действие). С примером унарного оператора вы уже знакомы из курса школьной математики – унарный минус, который позволяет превратить число в отрицательное (3 и -3), или положительное ( –(-3)). Т. е. общий синтаксис унарного оператора таков:</p>

<example>оператор операнд;       или      операнд оператор;</example>

<p>2.<b>Бинарные</b> – операторы, которым необходимо два операнда слева и справа от оператора. Таких операторов вы знаете множество - это +, -,* и т. д. И их общий синтаксис можно изобразить следующим образом:</p>

<example>операнд оператор операнд;</example>

<p>3.<b>Тернарные</b> - операторы, которым необходимо три операнда. В языке программирования С такой оператор всего один и с его синтаксисом мы познакомимся чуть позже.</p>
<h3>Приоритет</h3>
<p>Все операторы имеют приоритет. Ниже приведены операторы в соотвествии с приоритетами. Более углубленно мы познакомимся с некоторыми в сегодняшнем уроке, другие узнаем в процессе дальнейшего обучения. Естественно, в данной таблице представленны не все операторы языка, а пока что наиболее актуальные для нас.</p>

<table align="center" border="1" cellspacing="0" frame="box" rules="groups" style="margin-bottom: 10;">
<thead>
<TR>
<th>Символьное обозначение операции</th>
</TR>
<TR>
<th>Высший приоритет</th>
</TR>
</thead>
<tbody>
<TR>
<TD><B>()   []   .   -&gt;</B></TD>
</TR>
<TR>
<TD><B>!      *(ун)   -(ун)   ~   ++   --   </B></TD>
</TR>
<TR>
<TD><B>%   *   /</B></TD>
</TR>
<TR ><TD> <B>+   -  </B> </TD></TR>
<TR ><TD> <B>&lt;&lt;   &gt;&gt;</B> </TD></TR>
<TR ><TD> <B>&lt;   &gt;   &lt;=   &gt;=   </B> </TD> </TR>
<TR ><TD> <B>!=   ==  </B> </TD></TR>
<TR ><TD> <B>&amp;</B> </TD></TR>
<TR ><TD> <B>^</B> </TD></TR>
<TR ><TD> <B>|</B> </TD></TR>
<TR ><TD> <B>&amp;&amp;</B> </TD></TR>
<TR ><TD> <B>||</B> </TD></TR>
<TR ><TD> <B>?:</B> </TD></TR>
<TR ><TD> <B>=   +=   -=   *=   /=   %=   &amp;=   |=   ^=   &gt;&gt;=   &lt;&lt;=   </B> </TD></TR>
</tbody><thead><TR><th> Низший приоритет </th></TR></thead></table>

<p>Теперь, когда фундамент знаний в области операторов заложен, вы можете переходить к более детальному изучению последних, а именно к следующему разделу урока.</p>

</lesson>
