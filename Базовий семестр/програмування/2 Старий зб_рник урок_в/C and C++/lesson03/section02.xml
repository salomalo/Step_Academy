<?xml version="1.0" encoding="windows-1251" ?>
<?xml:stylesheet type="text/xsl" href="common/layout.xsl" ?>

<lesson title="Урок №3" next="section03.xml" prev="section01.xml" summ="0">	  

<h2>Цикл while.</h2>

<h3>Общий синтаксис и порядок выполнения цикла while</h3>
<example>
while(утверждение)
{
	действие для повторения;
}
</example>
<p>1. Прежде всего осуществляется проверка утверждения.</p>
<p>2. Если утверждение в круглых скобках истинно, выполнятся действие, находящееся внутри фигурных скобок.</p>
<p>3. Если утверждение в круглых скобках ложно, программа перейдет на следующую строчку за закрывающейся фигурной скобкой цикла.</p>
<p>4. Если утверждение в круглых скобках  было истинно и действие выполнилось, снова следует проверка утверждения.</p>


<p>Как видите, проверка утверждения повторяется при каждом выполнении цикла. Как только оно перестает быть верным, цикл завершается. Обратите внимания, что если утверждение ложно с самого начала, действие внутри цикла не будет выполнено ни разу.</p>

<center><img src="images\2.jpg" ></img></center>
<h3>Рассмотрим пример.</h3> <p>Предположим, что некоему человеку необходимо написать очерк о 7 чудесах света. Перед тем как это сделать ему необходимо отправиться и посмотреть на каждое из чудес. И, только затем писать о последних.</p>

<example>
#include &lt;iostream&gt;
using namespace std;
void main()
{
	//объявление управляющей переменной
	int count=0;
	while(count&lt;7)// проверка утверждения
	{
		count++;// изменение управляющей переменной 

		//действие для повторения

		// вы увидели ... чудо света
		cout&lt;&lt;"You seen"&lt;&lt;count&lt;&lt;" miracle of world!!!\n";
		
	}
	cout&lt;&lt;"Now, you can start your work.\n";
}
</example>
<p>Теперь подробно разберемся как работает наш пример.</p>
<p>1. Объявляем переменную изначально равную 0</p>
<p>2. Далее в условии цикла мы проверяем значение нашей переменной. Поскольку, именно от этого значения зависит, будет цикл выполняться или нет, то такая переменная называется <i>управляющей переменной цикла.</i></p>
<p>3. Значение переменной увеличиваем на единицу. <tip start="Примечание">Данное действие является обязательным, так как если не изменять значение переменной управляющей циклом, результат проверки утверждения тоже никогда не изменится. Это может привести к очень распространенной ошибке под названием - <b>вечный цикл. </b>Если утверждение цикла - верно, а управляющая переменная всегда имеет одинаковое значение, следовательно - утверждение верно всегда. Представьте, грязные тарелки никогда не заканчиватся - их число всегда постоянно. Насколько хватит посудомойки?! Ненадолго, правда? Вот и программа не выдержит такого натиска и через некоторое время после запуска вечного цикла - выдаст ошибку на этапе выполнения. Во избежание таких ошибок нужно внимательно следить за тем, чтобы внутри тела цикла происходило изменение управляющей переменной.</tip></p>
<p>4. Далее, выводим на экран текущее значение нашей переменной в виде сообщения о номере просмотренного чуда света.</p>
<p>5. Опять возвращаемся к условию и проверяем значение управляющей переменной.</p>
<p>Цикл будет продолжать свою работу до тех пор, пока значение переменной не станет равно 7. В этом случае произойдет вывод на экран строки "You seen 7 miracle of world!!!”, затем программа вернется к проверке условия. 7&lt;7 - является ложью. Программа больше в цикл не войдет и перейдет к строке "Now, you can start your work.".</p>
<p>В процессе выполнения программы на экране мы увидим следующую картину: </p>

<center><img src="images\1.jpg" ></img></center>
<p>Сейчас мы с Вами познакомились с одной из разновидностей цикла в языке С. Надеемся, было не сложно. В следующем разделе урока мы узнаем о цикле альтернативном конструкции while.</p>
</lesson>
