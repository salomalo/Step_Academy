<?xml version="1.0" encoding="windows-1251" ?>
<?xml:stylesheet type="text/xsl" href="common/layout.xsl" ?>

<lesson title="Урок №1" next="section08.xml" prev="section06.xml" summ="1">
<h2>Ввод данных</h2>

<p>Вы уже знакомы с
операцией вывода информации на экран компьютера - <font
face="Courier New"><strong>cout</strong></font>, но в большинстве
программ требуется не только выводить какую-либо
информацию на экран, но и иметь возможность
ввести в компьютер какие-либо данные с
клавиатуры. В предыдущем разделе была приведена программа расчета скидки. Естественно, что такие параметры как цена и количество товара было бы неплохо ввести с клавиатуры на этапе выполнения программы.  Давайте рассмотрим как Вы это можете
сделать. </p>

<p>Если нам нужно ввести данные в
компьютер, то будем пользоваться командой <strong>cin</strong>.
Как ею пользоваться? Синтаксис оператора ввода: </p>
<example><strong>cin</strong>&gt;&gt;имя_переменной;</example>

<p>имя_переменной указывает на
переменную, в которую нужно поместить данные,
введенные с клавиатуры:</p>

<h5>Например:</h5>

<example>cin&gt;&gt;Age;</example><p> Эта команда помещает число, введенное с
клавиатуры, в переменную с именем <font face="Courier New">Аge</font>.</p>

<p>Для того, чтобы  ввести число в переменную
 <font
face="Courier New">Number</font>, нужно всего лишь набрать такую
вот команду:</p>

<example>cin&gt;&gt;Number;</example>

<p>Ввод сразу нескольких переменных,
записывают таким образом:</p>

<example>cin&gt;&gt;имя_переменной1<font
face="Courier New">&gt;&gt;имя_переменной</font>2<font face="Courier New">&gt;&gt;...&gt;&gt;имя_переменной</font>N;</example>

<p>Список имен переменных должен
содержать имена всех переменных, в которые Вы
хотите ввести данные с клавиатуры. Список имен
может состоять из любого количества имен
переменных, разделенных комбинацией символов
&gt;&gt;.</p>

<h5>Пример:</h5>

<example><font face="Courier New">cin&gt;&gt;Quantity&gt;&gt;Price&gt;&gt;Discount;</font></example>

<p>Давайте оптимизируем программу из предыдущей статьи:</p>

<example>
//Заголовок
#include  &lt;iostream&gt;

// определение пространства имен, в котором есть cout&lt;&lt;
using namespace std;

// Главная функция
void main()
{
    	//Объявляем переменную Discount
	float Discount=0.05;

	//Объявляем переменную Cost
    	float Cost=10.50;
	//Приглашение ввести цену товара
   	 cout&lt;&lt;"What's the cost?\n";
    	//Ввод значения в переменную Cost
    	cin&gt;&gt;Cost;

	//Объявляем переменную Count
    	int Count=5;
    	//Приглашение ввести количество
    	cout&lt;&lt;"How much?\n";
    	// Ввод значения в переменную Count
    	cin&gt;&gt;Count;    

    	//Объявляем переменную Price
    	float Price;

    	//Вычисляем значение переменной Price
    	Price=Count*Cost-Count*Cost*Discount;
    
	// Выводим итоговую стоимость товара со скидкой
    	cout&lt;&lt;"Please, pay:"&lt;&lt;Price&lt;&lt;"\n";
}
</example>
<p>Теперь Вы увидели особенность работы оператора cin&gt;&gt;. Как только программа встречает данный оператор, она останавливается и ждет реакции пользователя. И, пока пользователь не введет данные и не нажмет "Ввод"(Enter). Только после этого продолжится выполнение.</p>
<p>На примере еще раз
поработаем с вводом и выводом. Напишем
программу-обманщика:
программа предлагает поиграть в числа, кто
загадает большее число тот и выигрывает.</p>

<p>Создадим новый проект Game и введем такой текст:</p>

<example>
// Заголовок
#include  &lt;iostream&gt;

// определение пространства имен, в котором есть cout&lt;&lt;
using namespace std;

// Главная функция
void main()
{
    	// Приглашение "Давай играть!"
    	cout&lt;&lt;"Let's play!\n";

	//Объявление переменной i
   	 int i;
    
	//Приглашение "Введите число"
   	 cout&lt;&lt;"Enter a number:";

	//Ввод числа
   	 cin&gt;&gt;i;

	//Вывод числа, которое "загадал" компьютер
   	cout&lt;&lt;"I have "&lt;&lt;i+1&lt;&lt;"\n";

    	// Вывод результата игры
    	cout&lt;&lt;"I'm winner!\n";
    
}
</example>

<p>Откомпилируйте программу. Обращаться с нашей программой легко.
Просто вводите любое число и постоянно
оказывается, что у компьютера число больше и он
выигрывает. Вот, что Вы увидите на экране при
запуске программы, если на запрос <font
face="Courier New">&quot;Enter a number:</font>&quot; введете число 67:</p>

<example>Let's play!
<font face="Courier New">Enter a number: 67
</font>
    <font face="Courier New">I have 68
</font>
    <font face="Courier New">I'm winner!
</font>
    <font face="Courier New">Press any key to continue...</font></example>

<p>Почему он все время выигрывает?</p>

<p>Давайте рассмотрим строчку </p>

<example><font face="Courier New">cout&lt;&lt;&quot;I have &quot;&lt;&lt;i+1&lt;&lt;&quot;\n&quot;;
</font></example>
<p>В ней выводится значение переменной  i, значение которой Вы ввели
с клавиатуры, увеличенное на 1, то есть компьтер всегда
выводит число, на 1 больше введенного вами с
клавиатуры.</p>

<p>Если в этой команде заменить
выражение <font face="Courier New">i+1</font> на выражение <font
face="Courier New">i-1</font>, то выигрывать всегда будете вы,
так как число выводимое компьтером всегда будет
на единицу меньше введенного вами с клавиатуры.</p>

<p>В заключение хотим обратить Ваше внимание на операторы +(плюс) и -(минус). Они используются для сложения и вычитания. В языке С, также есть оператор для деления - /. Данная информация поможет Вам при выполнении домашнего задания, а более подробно мы поговорим об операторах в следующих уроках.</p>
</lesson>
