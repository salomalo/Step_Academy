<?xml version="1.0" encoding="windows-1251" ?>

<!DOCTYPE page [
<!ENTITY nbsp "&#160;">
<!ENTITY пробел "&#160;">
<!ENTITY shy "&#173;">
<!ENTITY перенос "&#173;">
]>

<?xml:stylesheet type="text/xsl" href="../common/layout.xsl" ?>

<Урок xmlns="x-schema:Schema.xml" название="Режимы защиты данных."  предыдущий="section01.xml" следующий="section03.xml" copyright="© 2005 Вадим Волянский, Алексей Туманов.">

<h1 style="color:maroon">Режимы защиты данных.</h1>

<p>
Переходим к ознакомлению режимов защиты, которые используются в SQL Server. Их 2:
<ol>
	<li>Смешанный режим защиты.</li>
	<li>Режим интегрированной защиты Windows.</li>
</ol>
</p>

<h3 style="color:#05027E">Смешанный режим защиты.</h3>

<p>
При этом способе защиты пользователь может подключиться к SQL Server двумя способами, либо при помощи учетной записи Windows, либо при помощи учетной записи SQL Server. Т.о. этот режим защиты можно разделить на два: Режим Аутентификации Windows и Режим Аутентификации SQL Server.
</p>

<h4 style="color:#013400">Режим Аутентификации Windows.</h4>

<p>
Это самый удобный способ, если вы не хотите обременять пользователей вводить логины и пароли по нескольку раз. Этот режим аутентификации позволяет подключаться к SQL Server, введя логин и пароль при входе в Windows. Но при этом ответственность по управлению учетными записями полностью предоставляется операционной системе.
</p>

<p>
Я не буду рассказывать, как создавать пользователя, либо группу, т.к. вы это и так знаете (используйте MMC). Но после этого нужно указать SQL Server, что эти учетные записи могут быть использованы для подключения у нему. Для этого служат две хранимых процедуры:
</p>

<ol>
	<li><b>SP_GRANTLOGIN</b> - предоставление права регистрации.</li>
	<li><b>SP_REVOKELOGIN</b> - аннулирование прав регистрации.</li>
</ol>

<p>
Общий синтаксис:
</p>

<pre style="border-color:#FF0000">

	Execute sp_grantlogin 'имя'

	Execute sp_revokelogin 'имя'

</pre>

<p>
Имя должно быть представлено в виде <b>Имя_компьютера\имя_пользователя</b>, либо <b>Имя_домена\имя_группы_пользователей</b>. Имя пользователя и Имя группы пользователей, как видите, может указываться как на локальной машине, так и на домене (при запуске SQL Server на домене) и определяет, что указанному пользователю, либо группе пользователей разрешается осуществлять подключение к серверу SQL .
</p>

<p>
Например:
</p>

<pre>

	Execute sp_grantlogin 'HOME\Test_group'

</pre>

<p>
Результатом этого запроса должна быть строка: <b>Granted login access to 'HOME\Test_group'</b>. Это обозначает, что пользователи группы Test_group имеют право на подключение к SQL Server.
</p>

<p>
Пример2. Аннулирование прав.
</p>

<pre>

	Execute sp_revokelogin 'HOME\Test_group'

</pre>

<p>
Если вы аннулировали право на доступ определенному пользователю, а группа, в которую он входит, имеет возможность регистрироваться в SQL Server, то и пользователь с аннулированными правами все еще будет иметь возможность подсоединяться. Чтобы этого избежать, необходимо воспользоваться хранимой процедурой <b>SP_DENYLOGIN</b>.
</p>

<pre style="border-color:#FF0000">

	Execute sp_denylogin [<b>@loginame=</b>]'логин'

</pre>

<p>
Эта хранимая процедура аннулирует право на доступ определенного пользователя из определенной группы.
</p>

<h4 style="color:#013400">Режим Аутентификации SQL Server.</h4>

<p>
При этом способе аутентификации пользователь должен ввести логин и пароль для подключения к серверу. Windows, при этом, участия не принимает. Список логинов и паролей хранится в базе данных master в таблице sysxlogins. Этот способ подключения не на столько безопасен, как при Windows аутентификации и поэтому не является рекомендуемым для использования. Однако же на системах 9x всегда используется именно он.
</p>

<p>
При установке SQL Server в таблице sysxlogins автоматически будет создана учетная запись sa, даже если был выбран режим  интегрированной защиты данных. Если установка производилось на Windows 2000, то вместо учетной записи sa будет создана группа системных администраторов, которые автоматически будут отнесены к роли sysadmin.
</p>

<p>
За пароли, хранящиеся в таблице sysxlogins, можете не беспокоиться, т.к. они представлены в зашифрованном виде и доступ к ним имеют только администраторы базы данных.
</p>

<p>
Для создания учетной записи в SQL Server используется хранимая процедура sp_addlogin, а для удаления sp_droplogin.
</p>

<pre style="border-color:#FF0000">

Execute sp_addlogin [<b>@loginame=</b>]'логин', [<b>@passwd=</b>]'пароль', [[<b>@defdb=</b>] 'имя_базы_данных']]

</pre>

<p>
Логин - имя учетной записи, которая должна быть добавлена, Пароль - пароль, Имя_базы_данных - база данных по умолчанию. Это та база, которая будет загружаться автоматически при регистрации указанной учетной записи. Если ничего не указать, то по умолчанию будет открыта база данных master. Но <b>этого не достаточно, чтобы иметь доступ к данным, хранящимся внутри</b>.
</p>

<p>
Например:
</p>

<pre>

Execute sp_addlogin @loginame='test_user',@passwd='test',@defdb='books'

</pre>

<p>
Как видите, добавляется учетная запись Test_user, с паролем test, и базой по умолчанию books.
</p>

<p>
Чтобы просмотреть список всех учетных записей и баз данных, с которыми они в праве работать, необходимо воспользоваться специальной хранимой процедурой SP_HELPLOGINS.
</p>

<pre>

	Execute sp_helplogins

</pre>

<img src="img\pict1.jpg"></img>

<p>
Как видите, учетная запись Test_user добавлена, но право работать с какой-либо базой данных отсутствует.
</p>

<p>
Чтобы удалить учетную запись, необходимо использовать следующий синтаксис:
</p>

<pre style="border-color:#FF0000">

Execute sp_droplogin 'имя_учетной_записи'

</pre>

<p>
Давайте теперь удалим созданную запись.
</p>

<pre>

	Execute sp_droplogin 'Test_user'

</pre>

<p>
Но это еще не все. Бывают случаи, когда нужно изменить пароль для существующего пользователя. Для этого служит хранимая процедура <b>SP_PASSWORD</b>. Общий синтаксис:
</p>

<pre style="border-color:#FF0000">

Execute sp_password [<b>@old=</b>]'старый_пароль', [<b>@new=</b>]'новый_пароль', [<b>@loginame=</b>]'логин'

</pre>

<p>
Например:
</p>

<pre>

	Execute sp_password @old='test', @new='new_test', @loginame='Test_user'

</pre>

<p>
Также существует возможность <b>изменить базу данных, заданную по умолчанию</b>. Для этого нужна хранимая процедура <b>SP_DEFAULTDB</b>.
</p>

<pre style="border-color:#FF0000">

 Execute sp_defaultdb [<b>@loginame=</b>]'логин', [<b>@defdb=</b>]'имя_базы_по_умолчанию'

</pre>

<p>
При помощи Microsoft SQL Server Management Studio вы можете настраивать подсоединение, используемое по умолчанию. Для этого необходимо открыть окно свойств требуемого сервера и перейти на вкладку Security.
</p>

<img src="img\pict2.jpg"></img>

<p>
Появится следующее окошко:
</p>

<img src="img\pict3.jpg"></img>

<p>
<b>ВНИМАНИЕ!!!</b> Если выбран пункт Windows only, то возможность подключаться к серверу при помощи логина и пароля SQL Server будет отсутствовать, т.к. будет включен режим интегрированной защиты Windows.
</p>

<p>
Учтите, что, работая на Windows 9x, большая часть опций будет неактивна, т.к. в этих операционных системах не поддерживается режим аутентификации.
</p>

<p>
Как раз пункт Startup service account позволяет изменить учетную запись, используемую по умолчанию.
</p>

<p>
Также при помощи Microsoft SQL Server Management Studio можно управлять учетными записями. Для этого служит папка Security требуемого сервера.
</p>

<img src="img\pict4.jpg"></img>

<p>
Все учетные записи, кроме sa, это учетные записи группы Windows.
</p>

<p>
Чтобы добавить учетную запись при помощи Microsoft SQL Server Management Studio, выбираем к контекстном меню к пункту Logins - New Login.
</p>

<img src="img\pict5.jpg"></img>

<p>
И тогда вам будет предоставлена возможность создавать учетную запись в следующем окне:
</p>

<img src="img\pict6.jpg"></img>

<p>
Внимательно посмотрите на опции, указанные в <b>Authentication</b>. Если вы выбрали <b>Windows Authentication</b>, то вводимое вами имя в поле <b>Name</b>, должно быть либо именем учетной записи Windows, либо именем группы пользователей Windows. Также вам предоставляется выбор в выпадающем списке <b>Domain</b>, если необходимо выбрать имя контроллера домена. При этом <b>Grant Access</b> - раздача прав, <b>Deny Access</b> - аннулирование прав.
</p>

<p>
Выбирая <b>SQL Server authentication</b> - вы в поле <b>Name</b> указываете имя создаваемой учетной записи SQL Server, а в поле <b>Password</b> - пароль.
</p>

<p>
В <b>Defaults</b> - вы можете выбрать базу данных и язык, открываемую по умолчанию.
</p>

<p>
Удаление учетной записи производится, выбрав пункт контекстного меню "Удалить" к требуемой учетной записи в списке пользователей.
</p>

</Урок>