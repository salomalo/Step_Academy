<?xml version="1.0" encoding="windows-1251" ?>

<!DOCTYPE page [
<!ENTITY nbsp "&#160;">
<!ENTITY пробел "&#160;">
<!ENTITY shy "&#173;">
<!ENTITY перенос "&#173;">
]>

<?xml:stylesheet type="text/xsl" href="../common/layout.xsl" ?>

<Урок xmlns="x-schema:Schema.xml" название="Модификация таблиц. Оператор ALTER TABLE." 
предыдущий="section06.xml" следующий="section03.xml" copyright="© 2005 Вадим Волянский, Алексей Туманов.">
<h1 style="color=maroon">Модификация таблиц. Оператор ALTER TABLE.</h1>

<p>
Представьте, что создавая таблицу вы допустили некритическую ошибку, запрос отработал, но имя поля, которое должно было иметь тип данных decimal имеет тип данных int. Вроде бы ничего страшного, а удалять таблицу, а потом создавать ее заново не самый рациональный способ (особенно если в таблице уже есть данные). Иногда нужно добавить определенное поле, либо, наоборот, удалить, причем так, чтобы это было наименее болезненно. Для этого и служит оператор Alter Table, который служит для изменения структуры таблицы.
</p>

<p>
Общий синтаксис:
</p>

<pre style="border-color=#FF0000">

Alter table Имя_таблицы

{

	[Add имя_поля спецификаторы --Добавление стобца]

	[Alter Column имя_поля новые_спецификаторы --модифицирование столбца]

	[Drop имя_поля  --удаление столбца]

	[Drop Constraint имя_ограничения  --удаление ограничения]

	[Add Constraint имя_ограничения имя_ограничения тип_ограничения]

}

</pre>

<h3 align='center'><font color="#1925AB">Добавление поля.</font></h3>

<p>
Предположим, что у вас есть таблица Table и вам необходимо добавить поле Hello. Тогда запрос будет такой:
</p>

<pre>

Alter table Table1

Add Hello varchar(25)

</pre>

<p>
Вы должны помнить, что <b>поле со спецификатором NOT NULL может быть добавлено только если также будет указано ограничение по Умолчанию</b>.
</p>

<pre>

Alter table Table1

Add Hello2 varchar(25) not null constraint MyDf1 default('Hello')

</pre>

<h3 align='center'><font color="#1925AB">Модифицирование поля.</font></h3>

<p>
Единственное, что не подлежит модификации у поля при помощи запроса Alter table имя_таблицы Alter column, это изменение названия столбца. Это можно сделать только при помощи процедуры sp_rename.
</p>

<p>
Необходимо поменять тип столбца Hello в таблице Table1 на int.
</p>

<pre>

Alter table Table1

Alter column Hello int

</pre>

<p>
<b>Вы не можете модифицировать либо удалить поле, у которого указаны ограничения</b>, поэтому с начала необходимо удалить ограничения, и только потом модифицировать либо удалять поле.
</p>

<h3 align='center'><font color="#1925AB">Удаление ограничений. Удаление полей.</font></h3>

<p>
Например, нужно удалить поле Hello2 таблицы Table1. Запрос типа:
</p>

<pre style="color=#FF0000">
ОШИБКА!!!

Alter table Table

Drop Column Hello2

</pre>

<p>
т.к. на поле Hello2 наложено ограничение MyDF1. Соответственно, с начала необходимо удалить ограничение и только после этого само поле.
</p>

<pre style="color=#FF0000">
Правильно!!!
<pre style="border-color=#00FF00">
	Alter table Table

	Drop Constraint MyDF1;
</pre>
<pre style="border-color=#00FF00">
	Alter table Table

	Drop Column Hello2
</pre>

</pre>

<h3 align='center'><font color="#1925AB">Добавление ограничений.</font></h3>

<p>
Конечно же, если вы забыли указать ограничение при создании таблицы, то вы можете это сделать при помощи Alter table.
</p>

<p>
Например, вам необходимо указать значение по умолчанию для поля Col1 таблицы Table2.
</p>

<pre>

Alter table Table2

add constraint MyDF2 default (50) <b>for</b> Col1

</pre>

<p>
Как видите, необходимо использовать ключевое слово for, чтобы указать столбец, которому указывается ограничение. Для добавления ограничений на первичный ключ, уникальные значения и внешний ключ этого делать не нужно.
</p>
</Урок>