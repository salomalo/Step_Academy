<?xml version="1.0" encoding="windows-1251" ?>

<!DOCTYPE page [
<!ENTITY nbsp "&#160;">
<!ENTITY пробел "&#160;">
<!ENTITY shy "&#173;">
<!ENTITY перенос "&#173;">
]>

<?xml:stylesheet type="text/xsl" href="../common/layout.xsl" ?>

<Урок xmlns="x-schema:Schema.xml" название="Средства резервного копирования Microsoft SQL Server."  предыдущий="section02.xml" следующий="section04.xml" copyright="© 2005 Вадим Волянский, Алексей Туманов.">

<h1 style="color:maroon">Средства резервного копирования Microsoft SQL Server.</h1>

<h3 style="color:#05027E;text-align:center">Создание устройства для резервного копирования.</h3>

<p>Устройство резервного копирования (устройство резервирования) - это заранее созданный файл, в котором будут храниться резервируемые данные. Создать такое устройство можно либо с помощью Management Studio или с помощью системной процедуры <b>sp_addumpdevice</b>.
</p>

<pre style="border-color:#FF0000">

	Execute sp_addumpdevice [<b>@devtype</b>=]'тип_устройства',

	[<b>@logicalname</b>=]'логическое_имя',

	[<b>@physicalname</b>=]'физическое_имя'

	{ , [<b>@cntrltype</b>=]идентификатор_типа_устройства | [<b>@devstatus</b>=] 'статус_устройства'

<i>тип_устройства</i>  - устройство для хранения резервных копий. Может принимать одно из трех значений:
<ol>
	<li>disk - определяет, что в качестве носителя резервной информации выступает жесткий диск.</li>
	<li>pipe - сетевой ресурс. Передача данных производится через именованный канал.</li>
	<li>tape - резервная копия сохраняется на магнитной ленте.</li>
</ol>
<br/>
<i>логическое_имя</i> - логическое имя для создаваемого устройства резервирования.

<i>физическое_имя</i> - физический путь и имя создаваемого устройства.

<i>идентификатор_типа_устройства</i> - параметр, оставленный для совместимости.

</pre>

<p>SQL Server сохраняет логические и физические имена в таблице sysdevices базы данных master.</p>

<p>Например. Создадим несколько устройств резервного копирования.</p>

<pre style="border-color:863900">

Execute sp_addumpdevice 'disk', 'mybackup', 'd:\mybackup.bak'

Execute sp_addumpdevice 'tape', 'mybackup', '\\.\tape0' <span style="color:#008080">/* При определении ленты, нумерация идет с нуля.*/</span>

Execute sp_addumpdevice 'pipe', 'mybackup', '\\515-7\Vasya\ mybackup.bak'

</pre>

<p>
Для того чтобы просмотреть список всех доступных устройств резервного копирования используется хранимая процедура sp_helpdevice. Если не указывать параметр, то получаем общий список, указав имя ресурса, получим информацию об одном устройстве.
</p>

<pre style="border-color:#FF0000">

	Execute sp_helpdevice [[<b>@devname</b>=]'имя_устройства']

</pre>

<p>
Для удаления устройства нужно воспользоваться хранимой процедурой sp_dropdevice.
</p>

<pre style="border-color:#FF0000">

	Execute sp_dropdevice [<b>@logicalname</b>=]'логическое_имя'

	[,[<b>@delfile</b>=]'delfile']

<i>@delfile</i> - если не указать, то удаляется только информация об устройстве.
Если указать DELFILE, то удалению будет подвергнут сам файл.

</pre>

<p>Для <b>создания устройства резервного копирования через Management Studio</b> необходимо выбрать в требуемом сервере, в папке Server Objects пункт контекстного меню к Backup Devices - New Backup Device.</p>

<img src="img\pict4.jpg"></img>

<p>В появившемся окне нужно указать имя и путь к создаваемому ресурсу:</p>

<img src="img\pict5.jpg"></img>

<h3 style="color:#05027E;text-align:center">Проверка базы данных и резервных копий.</h3>

<p>На сколько это важно мы уже определили. Теперь нам предстоит рассмотреть процесс реализации этого процесса.</p>

<p>Для проверка используется команда <b>DBCC CHECKDB</b>.</p>

<pre style="border-color:#FF0000">

	DBCC CHECKDB ( 'имя_базы_данных' 

	[ , NOINDEX ] ) 
	[ WITH { [ ALL_ERRORMSGS ] ,
	[ NO_INFOMSGS ] } 
	]

</pre>

<ol>
	<li>имя_базы_данных -  имя проверяемой базы данных.</li>
	<li>NOINDEX - этот атрибут определяет, что индексы несистемных таблиц подвержены проверке не будут.</li>
	<li>WITH - определяет кол-во отображаемых ошибок.</li>
	<ul>
	<li>ALL_ERRORMSGS - отображение всех ошибок.</li>
	<li>NO_INFOMSGS - не отображать список ошибок.</li>
	</ul>
</ol>

<p>Пример:</p>

<pre style="border-color:863900">

	DBCC CHECKDB (‘books’) WITH NO_INFOMSGS

</pre>

<p>
Для того, чтобы проверить на правильность только системные таблицы используется утилита <b>DBCC CHECKCATALOG</b>.
</p>

<pre style="border-color:#FF0000">

	DBCC CHECKCATALOG 

	( 'имя_базы_данных')

	[ WITH NO_INFOMSGS ]

</pre>

<p>Имя_базы_даныых - определяет имя базы данных, чьи системные таблицы нужно проверить. Если не указать, то будет осуществляться проверка системных таблиц текущей базы данных.</p>

<p>Пример:</p>

<pre style="border-color:863900">

	DBCC CHECKCATALOG ('library') WITH NO_INFOMSGS

</pre>

<p>Для проверки на правильность одной определенной таблицы, либо представления нужна утилита <b>DBCC CHECKTABLE</b></p>

<pre style="border-color:#FF0000">

	DBCC CHECKTABLE ( 'имя_таблицы' 

	[ , NOINDEX ] ) 
	[ WITH { [ ALL_ERRORMSGS ],
	[ NO_INFOMSGS ] ]} 
	]

</pre>

<p>Пример:</p>

<pre style="border-color:863900">

	DBCC CHECKTABLE ('books') WITH ALL_ERRORMSGS

</pre>

</Урок>